<!-- Joi  -->
app.post("/listings",
    wrapAsync(async(req,res,next)=>{
    // let{title,description,image,price,country,location} = req.body;
       if(!req.body.listing){
        throw new ExpressError(400, "Send valid data for listing");
       }
       const newListing = new Listing(req.body.listing);
       if(!newListing.description){
        throw new ExpressError(400,"Desciption is missing");
       }
       if(!newListing.title){
        throw new ExpressError(400,"Title is missing");
       }
       if(!newListing.location){
        throw new ExpressError(400," is missing");
       }
    await newListing.save();
    res.redirect("/listings");

}));

In the above given line of code for each field which is present int the 
schema we are trying to validate explicitly 
but what will happen if there are many numbers of fields in the schema 
and even if we try to validate manually then lines of code will increase

So in order to validate each field we use Joi 
which is use for schema validation 

* This used for the server side validation and for this we will 
define a schema and this schema is not mongoose schema this schema 
will be for server side validation schema 




